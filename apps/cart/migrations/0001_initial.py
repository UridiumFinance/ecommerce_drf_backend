# Generated by Django 4.2.16 on 2025-07-09 19:31

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('addresses', '0001_initial'),
        ('products', '0007_alter_categoryinteraction_interaction_type_and_more'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Costo calculado de envío', max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField(blank=True, null=True)),
                ('count', models.PositiveIntegerField(default=1)),
                ('added_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('coupon_type', models.CharField(choices=[('fixed', 'Importe fijo'), ('percent', 'Porcentaje'), ('free_shipping', 'Envío gratis')], default='percent', help_text='Tipo de descuento', max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Valor de descuento (si es porcentaje, 0–100; si es fijo, moneda)', max_digits=10)),
                ('valid_from', models.DateTimeField()),
                ('valid_to', models.DateTimeField()),
                ('active', models.BooleanField(default=True)),
                ('max_uses', models.PositiveIntegerField(blank=True, help_text='Usos totales permitidos', null=True)),
                ('per_user_limit', models.PositiveIntegerField(default=1, help_text='Veces que cada usuario puede usarlo')),
                ('min_subtotal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Subtotal mínimo para aplicar', max_digits=10)),
                ('max_subtotal', models.DecimalField(blank=True, decimal_places=2, help_text='Subtotal máximo para aplicar', max_digits=10, null=True)),
                ('countries', django_countries.fields.CountryField(blank=True, help_text='Restricción por país', max_length=746, multiple=True)),
                ('uses_count', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['-valid_from'],
            },
        ),
        migrations.CreateModel(
            name='ShippingProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.SlugField(unique=True)),
                ('active', models.BooleanField(default=True)),
                ('api_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShippingZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('countries', django_countries.fields.CountryField(max_length=746, multiple=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShippingMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.SlugField()),
                ('base_rate', models.DecimalField(decimal_places=2, help_text='Costo fijo por envío', max_digits=8)),
                ('per_kg_rate', models.DecimalField(decimal_places=2, help_text='Costo por kilogramo adicional', max_digits=8)),
                ('min_delivery_days', models.PositiveSmallIntegerField()),
                ('max_delivery_days', models.PositiveSmallIntegerField()),
                ('active', models.BooleanField(default=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='methods', to='cart.shippingprovider')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='methods', to='cart.shippingzone')),
            ],
        ),
        migrations.CreateModel(
            name='CouponRedemption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.UUIDField(blank=True, help_text='ID de pedido donde se usó', null=True)),
                ('redeemed_at', models.DateTimeField()),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redemptions', to='cart.coupon')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-redeemed_at'],
            },
        ),
        migrations.AddIndex(
            model_name='coupon',
            index=models.Index(fields=['code'], name='cart_coupon_code_546127_idx'),
        ),
        migrations.AddIndex(
            model_name='coupon',
            index=models.Index(fields=['valid_to'], name='cart_coupon_valid_t_544dcc_idx'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='cart',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='cart.cart'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='color',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.color'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='content_type',
            field=models.ForeignKey(blank=True, limit_choices_to={'model__in': ('product', 'course')}, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='coupon',
            field=models.ForeignKey(blank=True, help_text='Cupón aplicado solo a este ítem', null=True, on_delete=django.db.models.deletion.SET_NULL, to='cart.coupon'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='flavor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.flavor'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='material',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.material'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='size',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.size'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='weight',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.weight'),
        ),
        migrations.AddField(
            model_name='cart',
            name='shipping_address',
            field=models.ForeignKey(blank=True, help_text='Dirección de envío elegida', null=True, on_delete=django.db.models.deletion.SET_NULL, to='addresses.shippingaddress'),
        ),
        migrations.AddField(
            model_name='cart',
            name='shipping_method',
            field=models.ForeignKey(blank=True, help_text='Método de envío elegido', null=True, on_delete=django.db.models.deletion.SET_NULL, to='cart.shippingmethod'),
        ),
        migrations.AlterUniqueTogether(
            name='shippingmethod',
            unique_together={('provider', 'zone', 'code')},
        ),
        migrations.AlterUniqueTogether(
            name='couponredemption',
            unique_together={('coupon', 'user', 'order')},
        ),
        migrations.AddIndex(
            model_name='cartitem',
            index=models.Index(fields=['content_type', 'object_id'], name='cart_cartit_content_598ed3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cartitem',
            unique_together={('cart', 'content_type', 'object_id', 'size', 'weight', 'material', 'color', 'flavor')},
        ),
        migrations.AddIndex(
            model_name='cart',
            index=models.Index(fields=['user'], name='cart_cart_user_f99fe5_idx'),
        ),
    ]
